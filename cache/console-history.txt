const adr1 = JSON.parse(JSON.stringify(deployer));
const add1 = JSON.parse(JSON.stringify(deployer));
const add1 = JSON.parse(JSON.stringify(person));
"0x98aC4b4eB4Ba661da7d3F575E51398498115Acf9"
deployer.address = 
ad1.address = "0x1b675750AbedBD8EaEd0A7B5364da87Fd069E2E9"
const ad1 = deployer
const a1 = deployer
a1
await mus.tokenAddress();
await mus.checkBalance();
const mus = await MultiSig.attach("0x72A3B767d845Daf1d1a33e11a389c227015E8d65");
const MultiSig = await ethers.getContractFactory("MultiSig");
const [deployer, a1, a2] = await ethers.getSigners();
.editor
const [deployer, a1, a2, a3] = await ethers.getSigners();
await mus1.checkBalance();
await mus1.becomeCandidate();
mus1 = await mus.connect(a1);
await mus1 = mus.connect(a1);
await mus.signer
await mus.signer();
s1 = new ethers.Signer()
ethers.Signer()
ethers
await ethers.Signer
ethers.Signer
s1 = new ethers.Signer(a1);
await mus.connect(a1).becomeCandidate();
await mus.connect(a1).checkBalance();
await mus.checkBalance();
const a1 = "0xE72418F04D87416AC71145B36452a8Afd2DeC083";
await mus.tokenAddress();
await mus.changeTokenAddress("0x4d9dA7E0038113C03bCd5a6166121c0a3A5a3652");
const mus = await MultiSig.attach("0x72A3B767d845Daf1d1a33e11a389c227015E8d65");
const MultiSig = await ethers.getContractFactory("MultiSig");
const [deployer] = await ethers.getSigners();
.editor
await mus.candidatesVotesCount(a1.address);
await mus.ownersCount();
await mus.connect(a1).voteForTheCandidate(a2.address, true)
await mus.voteForTheCandidate(a2.address, true)
await mus.connect(a2).becomeCandidate()
await mus.ownersCount();
await mus.connect(a1).voteForTheCandidate(a2.address, false)
await mus.voteForTheCandidate(a2.address, true)
await mus.voteForTheCandidate(a1.address, true)
await mus.connect(a2).becomeCandidate()
await mus.ownersCount();
await mus.voteForTheCandidate(a1.address, true)
await mus.connect(a1).becomeCandidate()
await mus.ownersCount();
const mus = await MultiSig.attach("0xa513E6E4b8f2a923D98304ec87F64353C4D5C853");
const MultiSig = await ethers.getContractFactory("MultiSig");
const [deployer, a1, a2, a3, a4] = await ethers.getSigners();
.editor
.help
await mus.owners(deployer.address)
await mus.owners(a3.address)
await mus.owners(a2.address)
await mus.owners(a1.address)
await mus.ownersCount();
await mus.connect(a1).voteForTheCandidate(a2.address, true);
await mus.voteForTheCandidate(a2.address, true);
await mus.connect(a2).becomeCandidate();
await mus.candidatesForOwner(a2.address);
await mus.connect(a1).voteForTheCandidate(a2.address, false);
await mus.voteForTheCandidate(a2.address, true);
await mus.connect(a2).becomeCandidate();
await mus.ownersCount()
await mus.voteForTheCandidate(a1.address, true)
await mus.connect(a1).becomeCandidate();
await mus.ownersCount();
const mus = await MultiSig.attach("0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9");
const MultiSig = await ethers.getContractFactory("MultiSig");
const [deployer, a1, a2, a3, a4] = await ethers.getSigners();
await mus.candidatesVotesCount(a2.address);
await mus.candidatesForOwner(a2.address);
await mus.ownersCount();
await mus.connect(a1).voteForTheCandidate(a2.address, false);
await mus.ownersCount();
await mus.voteForTheCandidate(a2.address, true);
await mus.candidatesForOwner(a2.address);
await mus.connect(a2).becomeCandidate();
await mus.ownersCount();
await mus.voteForTheCandidate(a1.address, true);
await mus.ownersVotesForCandidate(deployer.address, a1.address);
await mus.ownersVotesFor(deployer.address, a1.address);
await mus.candidatesVotesCount(a1.address);
await mus.candidatesForOwner(a1.address);
mus.candidatesForOwner();
await mus.candidatesForOwner[a1.address];
await mus.candidatesForOwner[a1];
await mus.candidatesForOwner[a1]
await mus.candidatesVotesCount[a1]._for()
await mus.candidatesVotesCount[a1]._for
await mus.candidatesVotesCount[a1]();
await mus.candidatesVotesCount[a1]
await mus.ownersCount();
await mus.voteForTheCandidate(a1, true);
await mus.connect(a1).becomeCandidate();
await mus.becomeCandidate();
await mus.ownersCount();
await mus.owners();
await mus.checkBalance();
const mus = await MultiSig.attach("0x5FbDB2315678afecb367f032d93F642f64180aa3");
const ms = await MultiSig.attach("0x5FbDB2315678afecb367f032d93F642f64180aa3");
const MultiSig = await ethers.getContractFactory("MultiSig");
const ms = await MultiSig.attach("0x5FbDB2315678afecb367f032d93F642f64180aa3");
multiSig
const [deployer, a1, a2, a3, a4] = await ethers.getSigners();